//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TWW.API {
    
    
    public class stage_scls_info_class {
        
        [System.Text.Json.Serialization.JsonIgnoreAttribute()]
        private u32 pointer;
        
        public char[] mStage {get => this._mStage(); set => this._mStage(value);}//;
        
        public u8 mStart {get => this._mStart(); set => this._mStart(value);}//;
        
        public u8 mRoom {get => this._mRoom(); set => this._mRoom(value);}//;
        
        public u8 mWipe {get => this._mWipe(); set => this._mWipe(value);}//;
        
        public u8 field_0xb {get => this._field_0xb(); set => this._field_0xb(value);}//;
        
        public stage_scls_info_class(u32 pointer) {
           this.pointer = pointer;
        }
        
        public static uint getSize() {
          return 0x0; // DEADBEEF TODO: Fix Addr
        }
        
        // #ARRCOUNT 8
        private char[] _mStage() {
            char[] bytes = new char[8]; for(u32 i = 0; i < 8; i++){bytes[i] = (char)Memory.RAM.ReadU8(this.pointer + 0x0 + (i * 1));} return bytes;
        }
        
        private void _mStage(char[] value) {
            for(u32 i = 0; i < 8; i++){Memory.RAM.WriteU8(this.pointer + 0x0 + (i * 1), (u8)value[i]);}
        }
        
        private u8 _mStart() {
            return Memory.RAM.ReadU8(this.pointer + 0x8);
        }
        
        private void _mStart(u8 value) {
            Memory.RAM.WriteU8(this.pointer + 0x8, value);
        }
        
        private u8 _mRoom() {
            return Memory.RAM.ReadU8(this.pointer + 0x9);
        }
        
        private void _mRoom(u8 value) {
            Memory.RAM.WriteU8(this.pointer + 0x9, value);
        }
        
        private u8 _mWipe() {
            return Memory.RAM.ReadU8(this.pointer + 0xA);
        }
        
        private void _mWipe(u8 value) {
            Memory.RAM.WriteU8(this.pointer + 0xA, value);
        }
        
        private u8 _field_0xb() {
            return Memory.RAM.ReadU8(this.pointer + 0xB);
        }
        
        private void _field_0xb(u8 value) {
            Memory.RAM.WriteU8(this.pointer + 0xB, value);
        }
    }
}

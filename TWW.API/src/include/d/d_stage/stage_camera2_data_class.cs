//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TWW.API {
    
    
    public class stage_camera2_data_class {
        
        [System.Text.Json.Serialization.JsonIgnoreAttribute()]
        private u32 pointer;
        
        public u32 field_0x0 {get => this._field_0x0(); set => this._field_0x0(value);}//;
        
        public f32 field_0x4 {get => this._field_0x4(); set => this._field_0x4(value);}//;
        
        public f32 field_0x8 {get => this._field_0x8(); set => this._field_0x8(value);}//;
        
        public f32 field_0xc {get => this._field_0xc(); set => this._field_0xc(value);}//;
        
        public u8 field_0x10 {get => this._field_0x10(); set => this._field_0x10(value);}//;
        
        public u8 field_0x11 {get => this._field_0x11(); set => this._field_0x11(value);}//;
        
        public u8 field_0x12 {get => this._field_0x12(); set => this._field_0x12(value);}//;
        
        public u8 field_0x13 {get => this._field_0x13(); set => this._field_0x13(value);}//;
        
        public u16 field_0x14 {get => this._field_0x14(); set => this._field_0x14(value);}//;
        
        public u16 field_0x16 {get => this._field_0x16(); set => this._field_0x16(value);}//;
        
        public stage_camera2_data_class(u32 pointer) {
           this.pointer = pointer;
        }
        
        public static uint getSize() {
          return 0x18;
        }
        
        private u32 _field_0x0() {
            return Memory.RAM.ReadU32(this.pointer + 0x00);
        }
        
        private void _field_0x0(u32 value) {
            Memory.RAM.WriteU32(this.pointer + 0x00, value);
        }
        
        private f32 _field_0x4() {
            return Memory.RAM.ReadF32(this.pointer + 0x04);
        }
        
        private void _field_0x4(f32 value) {
            Memory.RAM.WriteF32(this.pointer + 0x04, value);
        }
        
        private f32 _field_0x8() {
            return Memory.RAM.ReadF32(this.pointer + 0x08);
        }
        
        private void _field_0x8(f32 value) {
            Memory.RAM.WriteF32(this.pointer + 0x08, value);
        }
        
        private f32 _field_0xc() {
            return Memory.RAM.ReadF32(this.pointer + 0x0C);
        }
        
        private void _field_0xc(f32 value) {
            Memory.RAM.WriteF32(this.pointer + 0x0C, value);
        }
        
        private u8 _field_0x10() {
            return Memory.RAM.ReadU8(this.pointer + 0x10);
        }
        
        private void _field_0x10(u8 value) {
            Memory.RAM.WriteU8(this.pointer + 0x10, value);
        }
        
        private u8 _field_0x11() {
            return Memory.RAM.ReadU8(this.pointer + 0x11);
        }
        
        private void _field_0x11(u8 value) {
            Memory.RAM.WriteU8(this.pointer + 0x11, value);
        }
        
        private u8 _field_0x12() {
            return Memory.RAM.ReadU8(this.pointer + 0x12);
        }
        
        private void _field_0x12(u8 value) {
            Memory.RAM.WriteU8(this.pointer + 0x12, value);
        }
        
        private u8 _field_0x13() {
            return Memory.RAM.ReadU8(this.pointer + 0x13);
        }
        
        private void _field_0x13(u8 value) {
            Memory.RAM.WriteU8(this.pointer + 0x13, value);
        }
        
        private u16 _field_0x14() {
            return Memory.RAM.ReadU16(this.pointer + 0x14);
        }
        
        private void _field_0x14(u16 value) {
            Memory.RAM.WriteU16(this.pointer + 0x14, value);
        }
        
        private u16 _field_0x16() {
            return Memory.RAM.ReadU16(this.pointer + 0x16);
        }
        
        private void _field_0x16(u16 value) {
            Memory.RAM.WriteU16(this.pointer + 0x16, value);
        }
    }
}

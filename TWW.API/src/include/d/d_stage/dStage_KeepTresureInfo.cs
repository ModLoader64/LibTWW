//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TWW.API {
    
    
    public class dStage_KeepTresureInfo {
        
        [System.Text.Json.Serialization.JsonIgnoreAttribute()]
        private u32 pointer;
        
        // public u32 num {get => this._num(); set => this._num(value);}//;
        
        public stage_tresure_data_class[] mTresureData {get => this._mTresureData(); set => this._mTresureData(value);}//;
        
        //public u32 num {get => this._num(); set => this._num(value);}//;
        
        public stage_tgsc_data_class[] mDrTgData {get => this._mDrTgData(); set => this._mDrTgData(value);}//;
        
        public u32 chunkCount {get => this._chunkCount(); set => this._chunkCount(value);}//;
        
        public dStage_KeepTresureInfo(u32 pointer) {
           this.pointer = pointer;
        }
        
        public static uint getSize() {
          return 0x0; // DEADBEEF TODO: Fix Addr
        }
        
        private u32 _num() {
            return Memory.RAM.ReadU32(this.pointer + 0x00);
        }
        
        private void _num(u32 value) {
            Memory.RAM.WriteU32(this.pointer + 0x00, value);
        }
        
        // #ARRCOUNT 0x20
        private stage_tresure_data_class[] _mTresureData() {
          stage_tresure_data_class[] substructs = new stage_tresure_data_class[0x20]; for(u32 i = 0; i < 0x20; i++){substructs[i] = new stage_tresure_data_class(this.pointer + 0x04 + (i * stage_tresure_data_class.getSize()));}; return substructs;
        }
        
        private void _mTresureData(stage_tresure_data_class[] value) {
        }
        
/*        private u32 _num() {
            return Memory.RAM.ReadU32(this.pointer + 0x00);
        }
        
        private void _num(u32 value) {
            Memory.RAM.WriteU32(this.pointer + 0x00, value);
        }*/
        
        // #ARRCOUNT 0x40
        private stage_tgsc_data_class[] _mDrTgData() {
          stage_tgsc_data_class[] substructs = new stage_tgsc_data_class[0x40]; for(u32 i = 0; i < 0x40; i++){substructs[i] = new stage_tgsc_data_class(this.pointer + 0x04 + (i * stage_tgsc_data_class.getSize()));}; return substructs;
        }
        
        private void _mDrTgData(stage_tgsc_data_class[] value) {
        }
        
        private u32 _chunkCount() {
            return Memory.RAM.ReadU32(this.pointer + 0x0);
        }
        
        private void _chunkCount(u32 value) {
            Memory.RAM.WriteU32(this.pointer + 0x0, value);
        }
    }
}

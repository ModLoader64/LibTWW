//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TWW.API {
    
    
    public class stage_map_info_class {
        
        [System.Text.Json.Serialization.JsonIgnoreAttribute()]
        private u32 pointer;
        
        public u8[] field_0x00 {get => this._field_0x00(); set => this._field_0x00(value);}//;
        
        public f32 field_0x18 {get => this._field_0x18(); set => this._field_0x18(value);}//;
        
        public f32 field_0x1C {get => this._field_0x1C(); set => this._field_0x1C(value);}//;
        
        public f32 field_0x20 {get => this._field_0x20(); set => this._field_0x20(value);}//;
        
        public f32 field_0x24 {get => this._field_0x24(); set => this._field_0x24(value);}//;
        
        public u8[] field_0x28 {get => this._field_0x28(); set => this._field_0x28(value);}//;
        
        public u8 field_0x35 {get => this._field_0x35(); set => this._field_0x35(value);}//;
        
        public u8 mOceanXZ {get => this._mOceanXZ(); set => this._mOceanXZ(value);}//;
        
        public u8[] field_0x37 {get => this._field_0x37(); set => this._field_0x37(value);}//;
        
        public stage_map_info_class(u32 pointer) {
           this.pointer = pointer;
        }
        
        public static uint getSize() {
          return 0x0; // DEADBEEF TODO: Fix Addr
        }
        
        // #ARRCOUNT 24
        private u8[] _field_0x00() {
            u8[] bytes = new u8[24]; for(u32 i = 0; i < 24; i++){bytes[i] = Memory.RAM.ReadU8(this.pointer + 0x00 + (i * 1));} return bytes;
        }
        
        private void _field_0x00(u8[] value) {
            for(u32 i = 0; i < 24; i++){Memory.RAM.WriteU8(this.pointer + 0x00 + (i * 1), value[i]);}
        }
        
        private f32 _field_0x18() {
            return Memory.RAM.ReadF32(this.pointer + 0x18);
        }
        
        private void _field_0x18(f32 value) {
            Memory.RAM.WriteF32(this.pointer + 0x18, value);
        }
        
        private f32 _field_0x1C() {
            return Memory.RAM.ReadF32(this.pointer + 0x1C);
        }
        
        private void _field_0x1C(f32 value) {
            Memory.RAM.WriteF32(this.pointer + 0x1C, value);
        }
        
        private f32 _field_0x20() {
            return Memory.RAM.ReadF32(this.pointer + 0x20);
        }
        
        private void _field_0x20(f32 value) {
            Memory.RAM.WriteF32(this.pointer + 0x20, value);
        }
        
        private f32 _field_0x24() {
            return Memory.RAM.ReadF32(this.pointer + 0x24);
        }
        
        private void _field_0x24(f32 value) {
            Memory.RAM.WriteF32(this.pointer + 0x24, value);
        }
        
        // #ARRCOUNT 13
        private u8[] _field_0x28() {
            u8[] bytes = new u8[13]; for(u32 i = 0; i < 13; i++){bytes[i] = Memory.RAM.ReadU8(this.pointer + 0x28 + (i * 1));} return bytes;
        }
        
        private void _field_0x28(u8[] value) {
            for(u32 i = 0; i < 13; i++){Memory.RAM.WriteU8(this.pointer + 0x28 + (i * 1), value[i]);}
        }
        
        private u8 _field_0x35() {
            return Memory.RAM.ReadU8(this.pointer + 0x35);
        }
        
        private void _field_0x35(u8 value) {
            Memory.RAM.WriteU8(this.pointer + 0x35, value);
        }
        
        private u8 _mOceanXZ() {
            return Memory.RAM.ReadU8(this.pointer + 0x36);
        }
        
        private void _mOceanXZ(u8 value) {
            Memory.RAM.WriteU8(this.pointer + 0x36, value);
        }
        
        // #ARRCOUNT 1
        private u8[] _field_0x37() {
            u8[] bytes = new u8[1]; for(u32 i = 0; i < 1; i++){bytes[i] = Memory.RAM.ReadU8(this.pointer + 0x37 + (i * 1));} return bytes;
        }
        
        private void _field_0x37(u8[] value) {
            for(u32 i = 0; i < 1; i++){Memory.RAM.WriteU8(this.pointer + 0x37 + (i * 1), value[i]);}
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TWW.API {
    
    
    public class dEvDtEvent_c {
        
        [System.Text.Json.Serialization.JsonIgnoreAttribute()]
        private u32 pointer;
        
        public char[] mName {get => this._mName(); set => this._mName(value);}//;
        
        public u32 field_0x20 {get => this._field_0x20(); set => this._field_0x20(value);}//;
        
        public u32 field_0x24 {get => this._field_0x24(); set => this._field_0x24(value);}//;
        
        public u32 mPriority {get => this._mPriority(); set => this._mPriority(value);}//;
        
        public u32[] mStaffIdx {get => this._mStaffIdx(); set => this._mStaffIdx(value);}//;
        
        public s32 mNStaff {get => this._mNStaff(); set => this._mNStaff(value);}//;
        
        public u32[] mFlagCheckStart {get => this._mFlagCheckStart(); set => this._mFlagCheckStart(value);}//;
        
        public u32[] mFlagCheckFinish {get => this._mFlagCheckFinish(); set => this._mFlagCheckFinish(value);}//;
        
        public u8 mEventEndSound {get => this._mEventEndSound(); set => this._mEventEndSound(value);}//;
        
        public u32 field_0x98 {get => this._field_0x98(); set => this._field_0x98(value);}//;
        
        public u32 field_0x9c {get => this._field_0x9c(); set => this._field_0x9c(value);}//;
        
        public u32 field_0xa0 {get => this._field_0xa0(); set => this._field_0xa0(value);}//;
        
        public s32 mEventState {get => this._mEventState(); set => this._mEventState(value);}//;
        
        public u32 field_0xa8 {get => this._field_0xa8(); set => this._field_0xa8(value);}//;
        
        public u32 field_0xac {get => this._field_0xac(); set => this._field_0xac(value);}//;
        
        public dEvDtEvent_c(u32 pointer) {
           this.pointer = pointer;
        }
        
        public static uint getSize() {
          return 0x0; // DEADBEEF TODO: Fix Addr
        }
        
        // #ARRCOUNT 0x20
        private char[] _mName() {
            char[] bytes = new char[0x20]; for(u32 i = 0; i < 0x20; i++){bytes[i] = (char)Memory.RAM.ReadU8(this.pointer + 0x00 + (i * 1));} return bytes;
        }
        
        private void _mName(char[] value) {
            for(u32 i = 0; i < 0x20; i++){Memory.RAM.WriteU8(this.pointer + 0x00 + (i * 1), (u8)value[i]);}
        }
        
        private u32 _field_0x20() {
            return Memory.RAM.ReadU32(this.pointer + 0x20);
        }
        
        private void _field_0x20(u32 value) {
            Memory.RAM.WriteU32(this.pointer + 0x20, value);
        }
        
        private u32 _field_0x24() {
            return Memory.RAM.ReadU32(this.pointer + 0x24);
        }
        
        private void _field_0x24(u32 value) {
            Memory.RAM.WriteU32(this.pointer + 0x24, value);
        }
        
        private u32 _mPriority() {
            return Memory.RAM.ReadU32(this.pointer + 0x28);
        }
        
        private void _mPriority(u32 value) {
            Memory.RAM.WriteU32(this.pointer + 0x28, value);
        }
        
        // #ARRCOUNT 20
        private u32[] _mStaffIdx() {
            u32[] bytes = new u32[20]; for(u32 i = 0; i < 20; i++){bytes[i] = Memory.RAM.ReadU32(this.pointer + 0x2C + (i * 4));} return bytes;
        }
        
        private void _mStaffIdx(u32[] value) {
            for(u32 i = 0; i < 20; i++){Memory.RAM.WriteU32(this.pointer + 0x2C + (i * 4), value[i]);}
        }
        
        private s32 _mNStaff() {
            return Memory.RAM.ReadS32(this.pointer + 0x7C);
        }
        
        private void _mNStaff(s32 value) {
            Memory.RAM.WriteS32(this.pointer + 0x7C, value);
        }
        
        // #ARRCOUNT 2
        private u32[] _mFlagCheckStart() {
            u32[] bytes = new u32[2]; for(u32 i = 0; i < 2; i++){bytes[i] = Memory.RAM.ReadU32(this.pointer + 0x80 + (i * 4));} return bytes;
        }
        
        private void _mFlagCheckStart(u32[] value) {
            for(u32 i = 0; i < 2; i++){Memory.RAM.WriteU32(this.pointer + 0x80 + (i * 4), value[i]);}
        }
        
        // #ARRCOUNT 3
        private u32[] _mFlagCheckFinish() {
            u32[] bytes = new u32[3]; for(u32 i = 0; i < 3; i++){bytes[i] = Memory.RAM.ReadU32(this.pointer + 0x88 + (i * 4));} return bytes;
        }
        
        private void _mFlagCheckFinish(u32[] value) {
            for(u32 i = 0; i < 3; i++){Memory.RAM.WriteU32(this.pointer + 0x88 + (i * 4), value[i]);}
        }
        
        private u8 _mEventEndSound() {
            return Memory.RAM.ReadU8(this.pointer + 0x94);
        }
        
        private void _mEventEndSound(u8 value) {
            Memory.RAM.WriteU8(this.pointer + 0x94, value);
        }
        
        private u32 _field_0x98() {
            return Memory.RAM.ReadU32(this.pointer + 0x98);
        }
        
        private void _field_0x98(u32 value) {
            Memory.RAM.WriteU32(this.pointer + 0x98, value);
        }
        
        private u32 _field_0x9c() {
            return Memory.RAM.ReadU32(this.pointer + 0x9C);
        }
        
        private void _field_0x9c(u32 value) {
            Memory.RAM.WriteU32(this.pointer + 0x9C, value);
        }
        
        private u32 _field_0xa0() {
            return Memory.RAM.ReadU32(this.pointer + 0xA0);
        }
        
        private void _field_0xa0(u32 value) {
            Memory.RAM.WriteU32(this.pointer + 0xA0, value);
        }
        
        private s32 _mEventState() {
            return Memory.RAM.ReadS32(this.pointer + 0xA4);
        }
        
        private void _mEventState(s32 value) {
            Memory.RAM.WriteS32(this.pointer + 0xA4, value);
        }
        
        private u32 _field_0xa8() {
            return Memory.RAM.ReadU32(this.pointer + 0xA8);
        }
        
        private void _field_0xa8(u32 value) {
            Memory.RAM.WriteU32(this.pointer + 0xA8, value);
        }
        
        private u32 _field_0xac() {
            return Memory.RAM.ReadU32(this.pointer + 0xAC);
        }
        
        private void _field_0xac(u32 value) {
            Memory.RAM.WriteU32(this.pointer + 0xAC, value);
        }
    }
}

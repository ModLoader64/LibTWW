//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TWW.API {
    
    
    public class dEvDtStaff_c {
        
        [System.Text.Json.Serialization.JsonIgnoreAttribute()]
        private u32 pointer;
        
        public char[] mName {get => this._mName(); set => this._mName(value);}//;
        
        public u32 mTagID {get => this._mTagID(); set => this._mTagID(value);}//;
        
        public u32 mStaffIdx {get => this._mStaffIdx(); set => this._mStaffIdx(value);}//;
        
        public u32 m28 {get => this._m28(); set => this._m28(value);}//;
        
        public u32 mStaffType {get => this._mStaffType(); set => this._mStaffType(value);}//;
        
        public u32 mFirstCutIdx {get => this._mFirstCutIdx(); set => this._mFirstCutIdx(value);}//;
        
        public u8[] m34 {get => this._m34(); set => this._m34(value);}//;
        
        public u32 mCurCutIdx {get => this._mCurCutIdx(); set => this._mCurCutIdx(value);}//;
        
        public u32 mCurActionIdx {get => this._mCurActionIdx(); set => this._mCurActionIdx(value);}//;
        
        public s16 mWipeDirection {get => this._mWipeDirection(); set => this._mWipeDirection(value);}//;
        
        public s16 mTimer {get => this._mTimer(); set => this._mTimer(value);}//;
        
        public u8 m44 {get => this._m44(); set => this._m44(value);}//;
        
        public u8 m45 {get => this._m45(); set => this._m45(value);}//;
        
        public u8 mAdvance {get => this._mAdvance(); set => this._mAdvance(value);}//;
        
        public u8 mbHasAction {get => this._mbHasAction(); set => this._mbHasAction(value);}//;
        
        public u8[] field_48 {get => this._field_48(); set => this._field_48(value);}//;
        
        public dEvDtStaff_c(u32 pointer) {
           this.pointer = pointer;
        }
        
        public static uint getSize() {
          return 0x50;
        }
        
        // #ARRCOUNT 32
        private char[] _mName() {
            char[] bytes = new char[32]; for(u32 i = 0; i < 32; i++){bytes[i] = (char)Memory.RAM.ReadU8(this.pointer + 0x00 + (i * 1));} return bytes;
        }
        
        private void _mName(char[] value) {
            for(u32 i = 0; i < 32; i++){Memory.RAM.WriteU8(this.pointer + 0x00 + (i * 1), (u8)value[i]);}
        }
        
        private u32 _mTagID() {
            return Memory.RAM.ReadU32(this.pointer + 0x20);
        }
        
        private void _mTagID(u32 value) {
            Memory.RAM.WriteU32(this.pointer + 0x20, value);
        }
        
        private u32 _mStaffIdx() {
            return Memory.RAM.ReadU32(this.pointer + 0x24);
        }
        
        private void _mStaffIdx(u32 value) {
            Memory.RAM.WriteU32(this.pointer + 0x24, value);
        }
        
        private u32 _m28() {
            return Memory.RAM.ReadU32(this.pointer + 0x28);
        }
        
        private void _m28(u32 value) {
            Memory.RAM.WriteU32(this.pointer + 0x28, value);
        }
        
        private u32 _mStaffType() {
            return Memory.RAM.ReadU32(this.pointer + 0x2C);
        }
        
        private void _mStaffType(u32 value) {
            Memory.RAM.WriteU32(this.pointer + 0x2C, value);
        }
        
        private u32 _mFirstCutIdx() {
            return Memory.RAM.ReadU32(this.pointer + 0x30);
        }
        
        private void _mFirstCutIdx(u32 value) {
            Memory.RAM.WriteU32(this.pointer + 0x30, value);
        }
        
        // #ARRCOUNT 4
        private u8[] _m34() {
            u8[] bytes = new u8[4]; for(u32 i = 0; i < 4; i++){bytes[i] = Memory.RAM.ReadU8(this.pointer + 0x34 + (i * 1));} return bytes;
        }
        
        private void _m34(u8[] value) {
            for(u32 i = 0; i < 4; i++){Memory.RAM.WriteU8(this.pointer + 0x34 + (i * 1), value[i]);}
        }
        
        private u32 _mCurCutIdx() {
            return Memory.RAM.ReadU32(this.pointer + 0x38);
        }
        
        private void _mCurCutIdx(u32 value) {
            Memory.RAM.WriteU32(this.pointer + 0x38, value);
        }
        
        private u32 _mCurActionIdx() {
            return Memory.RAM.ReadU32(this.pointer + 0x3C);
        }
        
        private void _mCurActionIdx(u32 value) {
            Memory.RAM.WriteU32(this.pointer + 0x3C, value);
        }
        
        private s16 _mWipeDirection() {
            return Memory.RAM.ReadS16(this.pointer + 0x40);
        }
        
        private void _mWipeDirection(s16 value) {
            Memory.RAM.WriteS16(this.pointer + 0x40, value);
        }
        
        private s16 _mTimer() {
            return Memory.RAM.ReadS16(this.pointer + 0x42);
        }
        
        private void _mTimer(s16 value) {
            Memory.RAM.WriteS16(this.pointer + 0x42, value);
        }
        
        private u8 _m44() {
            return Memory.RAM.ReadU8(this.pointer + 0x44);
        }
        
        private void _m44(u8 value) {
            Memory.RAM.WriteU8(this.pointer + 0x44, value);
        }
        
        private u8 _m45() {
            return Memory.RAM.ReadU8(this.pointer + 0x45);
        }
        
        private void _m45(u8 value) {
            Memory.RAM.WriteU8(this.pointer + 0x45, value);
        }
        
        private u8 _mAdvance() {
            return Memory.RAM.ReadU8(this.pointer + 0x46);
        }
        
        private void _mAdvance(u8 value) {
            Memory.RAM.WriteU8(this.pointer + 0x46, value);
        }
        
        private u8 _mbHasAction() {
            return Memory.RAM.ReadU8(this.pointer + 0x47);
        }
        
        private void _mbHasAction(u8 value) {
            Memory.RAM.WriteU8(this.pointer + 0x47, value);
        }
        
        // #ARRCOUNT 8
        private u8[] _field_48() {
            u8[] bytes = new u8[8]; for(u32 i = 0; i < 8; i++){bytes[i] = Memory.RAM.ReadU8(this.pointer + 0x48 + (i * 1));} return bytes;
        }
        
        private void _field_48(u8[] value) {
            for(u32 i = 0; i < 8; i++){Memory.RAM.WriteU8(this.pointer + 0x48 + (i * 1), value[i]);}
        }
    }
}

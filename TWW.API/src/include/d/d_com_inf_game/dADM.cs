//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TWW.API {
    
    
    public class dADM {
        
        [System.Text.Json.Serialization.JsonIgnoreAttribute()]
        private u32 pointer;
        
        public u32 mBlockCount {get => this._mBlockCount(); set => this._mBlockCount(value);}//;
        
        public u32 mpData {get => this._mpData(); set => this._mpData(value);}//;
        
        public dADM_CharTbl mCharTbl {get => this._mCharTbl(); set => this._mCharTbl(value);}//;
        
        public camera_class mpCamera {get => this._mpCamera(); set => this._mpCamera(value);}//;
        
        public u8 mDlstWindowIdx {get => this._mDlstWindowIdx(); set => this._mDlstWindowIdx(value);}//;
        
        public u8 mCamIdx {get => this._mCamIdx(); set => this._mCamIdx(value);}//;
        
        public s8 field_0x06 {get => this._field_0x06(); set => this._field_0x06(value);}//;
        
        public u8 field_0x07 {get => this._field_0x07(); set => this._field_0x07(value);}//;
        
        public u32 mCameraAttentionStatus {get => this._mCameraAttentionStatus(); set => this._mCameraAttentionStatus(value);}//;
        
        public f32 mCameraZoomScale {get => this._mCameraZoomScale(); set => this._mCameraZoomScale(value);}//;
        
        public f32 mCameraZoomForcus {get => this._mCameraZoomForcus(); set => this._mCameraZoomForcus(value);}//;
        
        public u8[] field_0x14 {get => this._field_0x14(); set => this._field_0x14(value);}//;
        
        public dADM(u32 pointer) {
           this.pointer = pointer;
        }
        
        public static uint getSize() {
          return 0x0; // DEADBEEF TODO: Fix Addr
        }
        
        private u32 _mBlockCount() {
            return Memory.RAM.ReadU32(this.pointer + 0x00);
        }
        
        private void _mBlockCount(u32 value) {
            Memory.RAM.WriteU32(this.pointer + 0x00, value);
        }
        
        private u32 _mpData() {
            return Memory.RAM.ReadU32(this.pointer + 0x04);
        }
        
        private void _mpData(u32 value) {
            Memory.RAM.WriteU32(this.pointer + 0x04, value);
        }
        
        private dADM_CharTbl _mCharTbl() {
            return new dADM_CharTbl(this.pointer + 0x08);
        }
        
        private void _mCharTbl(dADM_CharTbl value) {
        }
        
        private camera_class _mpCamera() {
            return new camera_class(this.pointer + 0x00);
        }
        
        private void _mpCamera(camera_class value) {
        }
        
        private u8 _mDlstWindowIdx() {
            return Memory.RAM.ReadU8(this.pointer + 0x04);
        }
        
        private void _mDlstWindowIdx(u8 value) {
            Memory.RAM.WriteU8(this.pointer + 0x04, value);
        }
        
        private u8 _mCamIdx() {
            return Memory.RAM.ReadU8(this.pointer + 0x05);
        }
        
        private void _mCamIdx(u8 value) {
            Memory.RAM.WriteU8(this.pointer + 0x05, value);
        }
        
        private s8 _field_0x06() {
            return Memory.RAM.ReadS8(this.pointer + 0x06);
        }
        
        private void _field_0x06(s8 value) {
            Memory.RAM.WriteS8(this.pointer + 0x06, value);
        }
        
        private u8 _field_0x07() {
            return Memory.RAM.ReadU8(this.pointer + 0x07);
        }
        
        private void _field_0x07(u8 value) {
            Memory.RAM.WriteU8(this.pointer + 0x07, value);
        }
        
        private u32 _mCameraAttentionStatus() {
            return Memory.RAM.ReadU32(this.pointer + 0x08);
        }
        
        private void _mCameraAttentionStatus(u32 value) {
            Memory.RAM.WriteU32(this.pointer + 0x08, value);
        }
        
        private f32 _mCameraZoomScale() {
            return Memory.RAM.ReadF32(this.pointer + 0x0C);
        }
        
        private void _mCameraZoomScale(f32 value) {
            Memory.RAM.WriteF32(this.pointer + 0x0C, value);
        }
        
        private f32 _mCameraZoomForcus() {
            return Memory.RAM.ReadF32(this.pointer + 0x10);
        }
        
        private void _mCameraZoomForcus(f32 value) {
            Memory.RAM.WriteF32(this.pointer + 0x10, value);
        }
        
        // #ARRCOUNT 32
        private u8[] _field_0x14() {
            u8[] bytes = new u8[32]; for(u32 i = 0; i < 32; i++){bytes[i] = Memory.RAM.ReadU8(this.pointer + 0x14 + (i * 1));} return bytes;
        }
        
        private void _field_0x14(u8[] value) {
            for(u32 i = 0; i < 32; i++){Memory.RAM.WriteU8(this.pointer + 0x14 + (i * 1), value[i]);}
        }
    }
}

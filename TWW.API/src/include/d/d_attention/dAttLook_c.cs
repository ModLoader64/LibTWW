//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TWW.API {
    
    
    public class dAttLook_c {
        
        [System.Text.Json.Serialization.JsonIgnoreAttribute()]
        private u32 pointer;
        
        public u32 field_0x0 {get => this._field_0x0(); set => this._field_0x0(value);}//;
        
        public u32 field_0x4 {get => this._field_0x4(); set => this._field_0x4(value);}//;
        
        public f32 field_0x8 {get => this._field_0x8(); set => this._field_0x8(value);}//;
        
        public u32 mLookTargetID {get => this._mLookTargetID(); set => this._mLookTargetID(value);}//;
        
        public dAttLook_c(u32 pointer) {
           this.pointer = pointer;
        }
        
        public static uint getSize() {
          return 0x10;
        }
        
        private u32 _field_0x0() {
            return Memory.RAM.ReadU32(this.pointer + 0x0);
        }
        
        private void _field_0x0(u32 value) {
            Memory.RAM.WriteU32(this.pointer + 0x0, value);
        }
        
        private u32 _field_0x4() {
            return Memory.RAM.ReadU32(this.pointer + 0x4);
        }
        
        private void _field_0x4(u32 value) {
            Memory.RAM.WriteU32(this.pointer + 0x4, value);
        }
        
        private f32 _field_0x8() {
            return Memory.RAM.ReadF32(this.pointer + 0x8);
        }
        
        private void _field_0x8(f32 value) {
            Memory.RAM.WriteF32(this.pointer + 0x8, value);
        }
        
        private u32 _mLookTargetID() {
            return Memory.RAM.ReadU32(this.pointer + 0xC);
        }
        
        private void _mLookTargetID(u32 value) {
            Memory.RAM.WriteU32(this.pointer + 0xC, value);
        }
    }
}

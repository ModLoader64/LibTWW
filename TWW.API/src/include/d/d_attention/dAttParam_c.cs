//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TWW.API {
    
    
    public class dAttParam_c {
        
        [System.Text.Json.Serialization.JsonIgnoreAttribute()]
        private u32 pointer;
        
        public u16 field_0x00 {get => this._field_0x00(); set => this._field_0x00(value);}//;
        
        public u8[] field_0x02 {get => this._field_0x02(); set => this._field_0x02(value);}//;
        
        public f32 field_0x04 {get => this._field_0x04(); set => this._field_0x04(value);}//;
        
        public f32 field_0x08 {get => this._field_0x08(); set => this._field_0x08(value);}//;
        
        public f32 field_0x0c {get => this._field_0x0c(); set => this._field_0x0c(value);}//;
        
        public f32 field_0x10 {get => this._field_0x10(); set => this._field_0x10(value);}//;
        
        public f32 field_0x14 {get => this._field_0x14(); set => this._field_0x14(value);}//;
        
        public f32 field_0x18 {get => this._field_0x18(); set => this._field_0x18(value);}//;
        
        public dAttParam_c(u32 pointer) {
           this.pointer = pointer;
        }
        
        public static uint getSize() {
          return 0x0; // DEADBEEF TODO: Fix Addr
        }
        
        private u16 _field_0x00() {
            return Memory.RAM.ReadU16(this.pointer + 0x00);
        }
        
        private void _field_0x00(u16 value) {
            Memory.RAM.WriteU16(this.pointer + 0x00, value);
        }
        
        // #ARRCOUNT 2
        private u8[] _field_0x02() {
            u8[] bytes = new u8[2]; for(u32 i = 0; i < 2; i++){bytes[i] = Memory.RAM.ReadU8(this.pointer + 0x02 + (i * 1));} return bytes;
        }
        
        private void _field_0x02(u8[] value) {
            for(u32 i = 0; i < 2; i++){Memory.RAM.WriteU8(this.pointer + 0x02 + (i * 1), value[i]);}
        }
        
        private f32 _field_0x04() {
            return Memory.RAM.ReadF32(this.pointer + 0x04);
        }
        
        private void _field_0x04(f32 value) {
            Memory.RAM.WriteF32(this.pointer + 0x04, value);
        }
        
        private f32 _field_0x08() {
            return Memory.RAM.ReadF32(this.pointer + 0x08);
        }
        
        private void _field_0x08(f32 value) {
            Memory.RAM.WriteF32(this.pointer + 0x08, value);
        }
        
        private f32 _field_0x0c() {
            return Memory.RAM.ReadF32(this.pointer + 0x0C);
        }
        
        private void _field_0x0c(f32 value) {
            Memory.RAM.WriteF32(this.pointer + 0x0C, value);
        }
        
        private f32 _field_0x10() {
            return Memory.RAM.ReadF32(this.pointer + 0x10);
        }
        
        private void _field_0x10(f32 value) {
            Memory.RAM.WriteF32(this.pointer + 0x10, value);
        }
        
        private f32 _field_0x14() {
            return Memory.RAM.ReadF32(this.pointer + 0x14);
        }
        
        private void _field_0x14(f32 value) {
            Memory.RAM.WriteF32(this.pointer + 0x14, value);
        }
        
        private f32 _field_0x18() {
            return Memory.RAM.ReadF32(this.pointer + 0x18);
        }
        
        private void _field_0x18(f32 value) {
            Memory.RAM.WriteF32(this.pointer + 0x18, value);
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TWW.API {
    
    
    public class dAttention_c {
        
        [System.Text.Json.Serialization.JsonIgnoreAttribute()]
        private u32 pointer;
        
        public daPy_lk_c mpPlayer {get => this._mpPlayer(); set => this._mpPlayer(value);}//;
        
        public u32 mLockOnTargetBsPcID {get => this._mLockOnTargetBsPcID(); set => this._mLockOnTargetBsPcID(value);}//;
        
        public dAttDraw_CallBack_c mCallBack {get => this._mCallBack(); set => this._mCallBack(value);}//;
        
        public u32 mPlayerNo {get => this._mPlayerNo(); set => this._mPlayerNo(value);}//;
        
        public u32 mFlagMask {get => this._mFlagMask(); set => this._mFlagMask(value);}//;
        
        public u8[] field_0x014 {get => this._field_0x014(); set => this._field_0x014(value);}//;
        
        public u8 mLockOnState {get => this._mLockOnState(); set => this._mLockOnState(value);}//;
        
        public u8 field_0x019 {get => this._field_0x019(); set => this._field_0x019(value);}//;
        
        public u8 field_0x01a {get => this._field_0x01a(); set => this._field_0x01a(value);}//;
        
        public u8 field_0x01b {get => this._field_0x01b(); set => this._field_0x01b(value);}//;
        
        public s16 field_0x01c {get => this._field_0x01c(); set => this._field_0x01c(value);}//;
        
        public u8[] field_0x01E {get => this._field_0x01E(); set => this._field_0x01E(value);}//;
        
        public u32 mFlags {get => this._mFlags(); set => this._mFlags(value);}//;
        
        // public JKRSolidHeap heap {get => this._heap(); set => this._heap(value);}//;
        
        public s8 field_0x028 {get => this._field_0x028(); set => this._field_0x028(value);}//;
        
        public cXyz field_0x02c {get => this._field_0x02c(); set => this._field_0x02c(value);}//;
        
        public dAttDraw_c[] draw {get => this._draw(); set => this._draw(value);}//;
        
        public u32 field_0x050 {get => this._field_0x050(); set => this._field_0x050(value);}//;
        
        public dAttList_c[] mLockOnList {get => this._mLockOnList(); set => this._mLockOnList(value);}//;
        
        public u32 mLockOnNum {get => this._mLockOnNum(); set => this._mLockOnNum(value);}//;
        
        public u32 mLockOnOffs {get => this._mLockOnOffs(); set => this._mLockOnOffs(value);}//;
        
        public dAttList_c[] mActionList {get => this._mActionList(); set => this._mActionList(value);}//;
        
        public u32 mActionNum {get => this._mActionNum(); set => this._mActionNum(value);}//;
        
        public u32 mActionOffs {get => this._mActionOffs(); set => this._mActionOffs(value);}//;
        
        public u32 mHint {get => this._mHint(); set => this._mHint(value);}//;
        
        public dAttCatch_c mCatch {get => this._mCatch(); set => this._mCatch(value);}//;
        
        public dAttLook_c[] mLook {get => this._mLook(); set => this._mLook(value);}//;
        
        public u32 mEnemyBsPcId {get => this._mEnemyBsPcId(); set => this._mEnemyBsPcId(value);}//;
        
        public f32 mEnemyDistance {get => this._mEnemyDistance(); set => this._mEnemyDistance(value);}//;
        
        public dAttParam_c mAttParam {get => this._mAttParam(); set => this._mAttParam(value);}//;
        
        public dAttention_c(u32 pointer) {
           this.pointer = pointer;
        }
        
        public static uint getSize() {
          return 0x190;
        }
        
        private daPy_lk_c _mpPlayer() {
            return new daPy_lk_c(this.pointer + 0x000);
        }
        
        private void _mpPlayer(daPy_lk_c value) {
        }
        
        private u32 _mLockOnTargetBsPcID() {
            return Memory.RAM.ReadU32(this.pointer + 0x004);
        }
        
        private void _mLockOnTargetBsPcID(u32 value) {
            Memory.RAM.WriteU32(this.pointer + 0x004, value);
        }
        
        private dAttDraw_CallBack_c _mCallBack() {
            return new dAttDraw_CallBack_c(this.pointer + 0x008);
        }
        
        private void _mCallBack(dAttDraw_CallBack_c value) {
        }
        
        private u32 _mPlayerNo() {
            return Memory.RAM.ReadU32(this.pointer + 0x00C);
        }
        
        private void _mPlayerNo(u32 value) {
            Memory.RAM.WriteU32(this.pointer + 0x00C, value);
        }
        
        private u32 _mFlagMask() {
            return Memory.RAM.ReadU32(this.pointer + 0x010);
        }
        
        private void _mFlagMask(u32 value) {
            Memory.RAM.WriteU32(this.pointer + 0x010, value);
        }
        
        // #ARRCOUNT 4
        private u8[] _field_0x014() {
            u8[] bytes = new u8[4]; for(u32 i = 0; i < 4; i++){bytes[i] = Memory.RAM.ReadU8(this.pointer + 0x014 + (i * 1));} return bytes;
        }
        
        private void _field_0x014(u8[] value) {
            for(u32 i = 0; i < 4; i++){Memory.RAM.WriteU8(this.pointer + 0x014 + (i * 1), value[i]);}
        }
        
        private u8 _mLockOnState() {
            return Memory.RAM.ReadU8(this.pointer + 0x018);
        }
        
        private void _mLockOnState(u8 value) {
            Memory.RAM.WriteU8(this.pointer + 0x018, value);
        }
        
        private u8 _field_0x019() {
            return Memory.RAM.ReadU8(this.pointer + 0x019);
        }
        
        private void _field_0x019(u8 value) {
            Memory.RAM.WriteU8(this.pointer + 0x019, value);
        }
        
        private u8 _field_0x01a() {
            return Memory.RAM.ReadU8(this.pointer + 0x01A);
        }
        
        private void _field_0x01a(u8 value) {
            Memory.RAM.WriteU8(this.pointer + 0x01A, value);
        }
        
        private u8 _field_0x01b() {
            return Memory.RAM.ReadU8(this.pointer + 0x01B);
        }
        
        private void _field_0x01b(u8 value) {
            Memory.RAM.WriteU8(this.pointer + 0x01B, value);
        }
        
        private s16 _field_0x01c() {
            return Memory.RAM.ReadS16(this.pointer + 0x01C);
        }
        
        private void _field_0x01c(s16 value) {
            Memory.RAM.WriteS16(this.pointer + 0x01C, value);
        }
        
        // #ARRCOUNT 2
        private u8[] _field_0x01E() {
            u8[] bytes = new u8[2]; for(u32 i = 0; i < 2; i++){bytes[i] = Memory.RAM.ReadU8(this.pointer + 0x01E + (i * 1));} return bytes;
        }
        
        private void _field_0x01E(u8[] value) {
            for(u32 i = 0; i < 2; i++){Memory.RAM.WriteU8(this.pointer + 0x01E + (i * 1), value[i]);}
        }
        
        private u32 _mFlags() {
            return Memory.RAM.ReadU32(this.pointer + 0x020);
        }
        
        private void _mFlags(u32 value) {
            Memory.RAM.WriteU32(this.pointer + 0x020, value);
        }
/*        
        private JKRSolidHeap _heap() {
            return new JKRSolidHeap(this.pointer + 0x024);
        }
        
        private void _heap(JKRSolidHeap value) {
        }
        */
        private s8 _field_0x028() {
            return Memory.RAM.ReadS8(this.pointer + 0x028);
        }
        
        private void _field_0x028(s8 value) {
            Memory.RAM.WriteS8(this.pointer + 0x028, value);
        }
        
        private cXyz _field_0x02c() {
            return new cXyz(this.pointer + 0x02C);
        }
        
        private void _field_0x02c(cXyz value) {
        }
        
        // #ARRCOUNT 2
        private dAttDraw_c[] _draw() {
          dAttDraw_c[] substructs = new dAttDraw_c[2]; for(u32 i = 0; i < 2; i++){substructs[i] = new dAttDraw_c(this.pointer + 0x038 + (i * dAttDraw_c.getSize()));}; return substructs;
        }
        
        private void _draw(dAttDraw_c[] value) {
        }
        
        private u32 _field_0x050() {
            return Memory.RAM.ReadU32(this.pointer + 0x050);
        }
        
        private void _field_0x050(u32 value) {
            Memory.RAM.WriteU32(this.pointer + 0x050, value);
        }
        
        // #ARRCOUNT 8
        private dAttList_c[] _mLockOnList() {
          dAttList_c[] substructs = new dAttList_c[8]; for(u32 i = 0; i < 8; i++){substructs[i] = new dAttList_c(this.pointer + 0x054 + (i * dAttList_c.getSize()));}; return substructs;
        }
        
        private void _mLockOnList(dAttList_c[] value) {
        }
        
        private u32 _mLockOnNum() {
            return Memory.RAM.ReadU32(this.pointer + 0x0D4);
        }
        
        private void _mLockOnNum(u32 value) {
            Memory.RAM.WriteU32(this.pointer + 0x0D4, value);
        }
        
        private u32 _mLockOnOffs() {
            return Memory.RAM.ReadU32(this.pointer + 0x0D8);
        }
        
        private void _mLockOnOffs(u32 value) {
            Memory.RAM.WriteU32(this.pointer + 0x0D8, value);
        }
        
        // #ARRCOUNT 4
        private dAttList_c[] _mActionList() {
          dAttList_c[] substructs = new dAttList_c[4]; for(u32 i = 0; i < 4; i++){substructs[i] = new dAttList_c(this.pointer + 0x0DC + (i * dAttList_c.getSize()));}; return substructs;
        }
        
        private void _mActionList(dAttList_c[] value) {
        }
        
        private u32 _mActionNum() {
            return Memory.RAM.ReadU32(this.pointer + 0x11C);
        }
        
        private void _mActionNum(u32 value) {
            Memory.RAM.WriteU32(this.pointer + 0x11C, value);
        }
        
        private u32 _mActionOffs() {
            return Memory.RAM.ReadU32(this.pointer + 0x120);
        }
        
        private void _mActionOffs(u32 value) {
            Memory.RAM.WriteU32(this.pointer + 0x120, value);
        }
        
        private u32 _mHint() {
            return Memory.RAM.ReadU32(this.pointer + 0x124);
        }
        
        private void _mHint(u32 value) {
            Memory.RAM.WriteU32(this.pointer + 0x124, value);
        }
        
        private dAttCatch_c _mCatch() {
            return new dAttCatch_c(this.pointer + 0x130);
        }
        
        private void _mCatch(dAttCatch_c value) {
        }
        
        // #ARRCOUNT 2
        private dAttLook_c[] _mLook() {
          dAttLook_c[] substructs = new dAttLook_c[2]; for(u32 i = 0; i < 2; i++){substructs[i] = new dAttLook_c(this.pointer + 0x148 + (i * dAttLook_c.getSize()));}; return substructs;
        }
        
        private void _mLook(dAttLook_c[] value) {
        }
        
        private u32 _mEnemyBsPcId() {
            return Memory.RAM.ReadU32(this.pointer + 0x168);
        }
        
        private void _mEnemyBsPcId(u32 value) {
            Memory.RAM.WriteU32(this.pointer + 0x168, value);
        }
        
        private f32 _mEnemyDistance() {
            return Memory.RAM.ReadF32(this.pointer + 0x16C);
        }
        
        private void _mEnemyDistance(f32 value) {
            Memory.RAM.WriteF32(this.pointer + 0x16C, value);
        }
        
        private dAttParam_c _mAttParam() {
            return new dAttParam_c(this.pointer + 0x170);
        }
        
        private void _mAttParam(dAttParam_c value) {
        }
    }
}

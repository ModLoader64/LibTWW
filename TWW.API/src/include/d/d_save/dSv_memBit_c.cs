//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TWW.API {
    
    
    public class dSv_memBit_c {
        
        [System.Text.Json.Serialization.JsonIgnoreAttribute()]
        private u32 pointer;
        
        public u32 mTbox {get => this._mTbox(); set => this._mTbox(value);}//;
        
        public u32[] mSwitch {get => this._mSwitch(); set => this._mSwitch(value);}//;
        
        public u32[] mItem {get => this._mItem(); set => this._mItem(value);}//;
        
        public u32[] mVisitedRoom {get => this._mVisitedRoom(); set => this._mVisitedRoom(value);}//;
        
        public u8 mKeyNum {get => this._mKeyNum(); set => this._mKeyNum(value);}//;
        
        public u8 mDungeonItem {get => this._mDungeonItem(); set => this._mDungeonItem(value);}//;
        
        public dSv_memBit_c(u32 pointer) {
           this.pointer = pointer;
        }
        
        public static uint getSize() {
          return 0x24;
        }
        
        private u32 _mTbox() {
            return Memory.RAM.ReadU32(this.pointer + 0x00);
        }
        
        private void _mTbox(u32 value) {
            Memory.RAM.WriteU32(this.pointer + 0x00, value);
        }
        
        // #ARRCOUNT 4
        private u32[] _mSwitch() {
            u32[] bytes = new u32[4]; for(u32 i = 0; i < 4; i++){bytes[i] = Memory.RAM.ReadU32(this.pointer + 0x04 + (i * 4));} return bytes;
        }
        
        private void _mSwitch(u32[] value) {
            for(u32 i = 0; i < 4; i++){Memory.RAM.WriteU32(this.pointer + 0x04 + (i * 4), value[i]);}
        }
        
        // #ARRCOUNT 1
        private u32[] _mItem() {
            u32[] bytes = new u32[1]; for(u32 i = 0; i < 1; i++){bytes[i] = Memory.RAM.ReadU32(this.pointer + 0x14 + (i * 4));} return bytes;
        }
        
        private void _mItem(u32[] value) {
            for(u32 i = 0; i < 1; i++){Memory.RAM.WriteU32(this.pointer + 0x14 + (i * 4), value[i]);}
        }
        
        // #ARRCOUNT 2
        private u32[] _mVisitedRoom() {
            u32[] bytes = new u32[2]; for(u32 i = 0; i < 2; i++){bytes[i] = Memory.RAM.ReadU32(this.pointer + 0x18 + (i * 4));} return bytes;
        }
        
        private void _mVisitedRoom(u32[] value) {
            for(u32 i = 0; i < 2; i++){Memory.RAM.WriteU32(this.pointer + 0x18 + (i * 4), value[i]);}
        }
        
        private u8 _mKeyNum() {
            return Memory.RAM.ReadU8(this.pointer + 0x20);
        }
        
        private void _mKeyNum(u8 value) {
            Memory.RAM.WriteU8(this.pointer + 0x20, value);
        }
        
        private u8 _mDungeonItem() {
            return Memory.RAM.ReadU8(this.pointer + 0x21);
        }
        
        private void _mDungeonItem(u8 value) {
            Memory.RAM.WriteU8(this.pointer + 0x21, value);
        }
    }
}

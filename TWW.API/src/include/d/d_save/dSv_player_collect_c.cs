//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TWW.API {
    
    
    public class dSv_player_collect_c {
        
        [System.Text.Json.Serialization.JsonIgnoreAttribute()]
        private u32 pointer;
        
        public u8[] mCollect {get => this._mCollect(); set => this._mCollect(value);}//;
        
        public u8 field_0x8 {get => this._field_0x8(); set => this._field_0x8(value);}//;
        
        public u8 mTact {get => this._mTact(); set => this._mTact(value);}//;
        
        public u8 mTriforce {get => this._mTriforce(); set => this._mTriforce(value);}//;
        
        public u8 mSymbol {get => this._mSymbol(); set => this._mSymbol(value);}//;
        
        public u8 field_0xc {get => this._field_0xc(); set => this._field_0xc(value);}//;
        
        public dSv_player_collect_c(u32 pointer) {
           this.pointer = pointer;
        }
        
        public static uint getSize() {
          return 0xD;
        }
        
        // #ARRCOUNT 8
        private u8[] _mCollect() {
            u8[] bytes = new u8[8]; for(u32 i = 0; i < 8; i++){bytes[i] = Memory.RAM.ReadU8(this.pointer + 0x0 + (i * 1));} return bytes;
        }
        
        private void _mCollect(u8[] value) {
            for(u32 i = 0; i < 8; i++){Memory.RAM.WriteU8(this.pointer + 0x0 + (i * 1), value[i]);}
        }
        
        private u8 _field_0x8() {
            return Memory.RAM.ReadU8(this.pointer + 0x8);
        }
        
        private void _field_0x8(u8 value) {
            Memory.RAM.WriteU8(this.pointer + 0x8, value);
        }
        
        private u8 _mTact() {
            return Memory.RAM.ReadU8(this.pointer + 0x9);
        }
        
        private void _mTact(u8 value) {
            Memory.RAM.WriteU8(this.pointer + 0x9, value);
        }
        
        private u8 _mTriforce() {
            return Memory.RAM.ReadU8(this.pointer + 0xA);
        }
        
        private void _mTriforce(u8 value) {
            Memory.RAM.WriteU8(this.pointer + 0xA, value);
        }
        
        private u8 _mSymbol() {
            return Memory.RAM.ReadU8(this.pointer + 0xB);
        }
        
        private void _mSymbol(u8 value) {
            Memory.RAM.WriteU8(this.pointer + 0xB, value);
        }
        
        private u8 _field_0xc() {
            return Memory.RAM.ReadU8(this.pointer + 0xC);
        }
        
        private void _field_0xc(u8 value) {
            Memory.RAM.WriteU8(this.pointer + 0xC, value);
        }
    }
}

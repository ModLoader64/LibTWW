//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TWW.API {
    
    
    public class dSv_player_bag_item_record_c {
        
        [System.Text.Json.Serialization.JsonIgnoreAttribute()]
        private u32 pointer;
        
        public u8[] mBeastNum {get => this._mBeastNum(); set => this._mBeastNum(value);}//;
        
        public u8[] mBaitNum {get => this._mBaitNum(); set => this._mBaitNum(value);}//;
        
        public u8[] mReserveNum {get => this._mReserveNum(); set => this._mReserveNum(value);}//;
        
        public dSv_player_bag_item_record_c(u32 pointer) {
           this.pointer = pointer;
        }
        
        public static uint getSize() {
          return 0x18;
        }
        
        // #ARRCOUNT 8
        private u8[] _mBeastNum() {
            u8[] bytes = new u8[8]; for(u32 i = 0; i < 8; i++){bytes[i] = Memory.RAM.ReadU8(this.pointer + 0x00 + (i * 1));} return bytes;
        }
        
        private void _mBeastNum(u8[] value) {
            for(u32 i = 0; i < 8; i++){Memory.RAM.WriteU8(this.pointer + 0x00 + (i * 1), value[i]);}
        }
        
        // #ARRCOUNT 8
        private u8[] _mBaitNum() {
            u8[] bytes = new u8[8]; for(u32 i = 0; i < 8; i++){bytes[i] = Memory.RAM.ReadU8(this.pointer + 0x08 + (i * 1));} return bytes;
        }
        
        private void _mBaitNum(u8[] value) {
            for(u32 i = 0; i < 8; i++){Memory.RAM.WriteU8(this.pointer + 0x08 + (i * 1), value[i]);}
        }
        
        // #ARRCOUNT 8
        private u8[] _mReserveNum() {
            u8[] bytes = new u8[8]; for(u32 i = 0; i < 8; i++){bytes[i] = Memory.RAM.ReadU8(this.pointer + 0x10 + (i * 1));} return bytes;
        }
        
        private void _mReserveNum(u8[] value) {
            for(u32 i = 0; i < 8; i++){Memory.RAM.WriteU8(this.pointer + 0x10 + (i * 1), value[i]);}
        }
    }
}

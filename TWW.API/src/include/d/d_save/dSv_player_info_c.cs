//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TWW.API {
    
    
    public class dSv_player_info_c {
        
        [System.Text.Json.Serialization.JsonIgnoreAttribute()]
        private u32 pointer;
        
        public u8[] field_0x0 {get => this._field_0x0(); set => this._field_0x0(value);}//;
        
        public u16 field_0x10 {get => this._field_0x10(); set => this._field_0x10(value);}//;
        
        public u16 mDeathCount {get => this._mDeathCount(); set => this._mDeathCount(value);}//;
        
        public char[] mPlayerName {get => this._mPlayerName(); set => this._mPlayerName(value);}//;
        
        public char[] field_0x25 {get => this._field_0x25(); set => this._field_0x25(value);}//;
        
        public char[] field_0x36 {get => this._field_0x36(); set => this._field_0x36(value);}//;
        
        public char[] field_0x47 {get => this._field_0x47(); set => this._field_0x47(value);}//;
        
        public u8 mClearCount {get => this._mClearCount(); set => this._mClearCount(value);}//;
        
        public u8 mRandomSalvagePoint {get => this._mRandomSalvagePoint(); set => this._mRandomSalvagePoint(value);}//;
        
        public u8[] field_0x5a {get => this._field_0x5a(); set => this._field_0x5a(value);}//;
        
        public dSv_player_info_c(u32 pointer) {
           this.pointer = pointer;
        }
        
        public static uint getSize() {
          return 0x5C;
        }
        
        // #ARRCOUNT 0x10
        private u8[] _field_0x0() {
            u8[] bytes = new u8[0x10]; for(u32 i = 0; i < 0x10; i++){bytes[i] = Memory.RAM.ReadU8(this.pointer + 0x00 + (i * 1));} return bytes;
        }
        
        private void _field_0x0(u8[] value) {
            for(u32 i = 0; i < 0x10; i++){Memory.RAM.WriteU8(this.pointer + 0x00 + (i * 1), value[i]);}
        }
        
        private u16 _field_0x10() {
            return Memory.RAM.ReadU16(this.pointer + 0x10);
        }
        
        private void _field_0x10(u16 value) {
            Memory.RAM.WriteU16(this.pointer + 0x10, value);
        }
        
        private u16 _mDeathCount() {
            return Memory.RAM.ReadU16(this.pointer + 0x10);
        }
        
        private void _mDeathCount(u16 value) {
            Memory.RAM.WriteU16(this.pointer + 0x10, value);
        }
        
        // #ARRCOUNT 17
        private char[] _mPlayerName() {
            char[] bytes = new char[17]; for(u32 i = 0; i < 17; i++){bytes[i] = (char)Memory.RAM.ReadU8(this.pointer + 0x14 + (i * 1));} return bytes;
        }
        
        private void _mPlayerName(char[] value) {
            for(u32 i = 0; i < 17; i++){Memory.RAM.WriteU8(this.pointer + 0x14 + (i * 1), (u8)value[i]);}
        }
        
        // #ARRCOUNT 17
        private char[] _field_0x25() {
            char[] bytes = new char[17]; for(u32 i = 0; i < 17; i++){bytes[i] = (char)Memory.RAM.ReadU8(this.pointer + 0x25 + (i * 1));} return bytes;
        }
        
        private void _field_0x25(char[] value) {
            for(u32 i = 0; i < 17; i++){Memory.RAM.WriteU8(this.pointer + 0x25 + (i * 1), (u8)value[i]);}
        }
        
        // #ARRCOUNT 17
        private char[] _field_0x36() {
            char[] bytes = new char[17]; for(u32 i = 0; i < 17; i++){bytes[i] = (char)Memory.RAM.ReadU8(this.pointer + 0x36 + (i * 1));} return bytes;
        }
        
        private void _field_0x36(char[] value) {
            for(u32 i = 0; i < 17; i++){Memory.RAM.WriteU8(this.pointer + 0x36 + (i * 1), (u8)value[i]);}
        }
        
        // #ARRCOUNT 17
        private char[] _field_0x47() {
            char[] bytes = new char[17]; for(u32 i = 0; i < 17; i++){bytes[i] = (char)Memory.RAM.ReadU8(this.pointer + 0x47 + (i * 1));} return bytes;
        }
        
        private void _field_0x47(char[] value) {
            for(u32 i = 0; i < 17; i++){Memory.RAM.WriteU8(this.pointer + 0x47 + (i * 1), (u8)value[i]);}
        }
        
        private u8 _mClearCount() {
            return Memory.RAM.ReadU8(this.pointer + 0x58);
        }
        
        private void _mClearCount(u8 value) {
            Memory.RAM.WriteU8(this.pointer + 0x58, value);
        }
        
        private u8 _mRandomSalvagePoint() {
            return Memory.RAM.ReadU8(this.pointer + 0x59);
        }
        
        private void _mRandomSalvagePoint(u8 value) {
            Memory.RAM.WriteU8(this.pointer + 0x59, value);
        }
        
        // #ARRCOUNT 2
        private u8[] _field_0x5a() {
            u8[] bytes = new u8[2]; for(u32 i = 0; i < 2; i++){bytes[i] = Memory.RAM.ReadU8(this.pointer + 0x5A + (i * 1));} return bytes;
        }
        
        private void _field_0x5a(u8[] value) {
            for(u32 i = 0; i < 2; i++){Memory.RAM.WriteU8(this.pointer + 0x5A + (i * 1), value[i]);}
        }
    }
}

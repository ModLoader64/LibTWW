//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TWW.API {
    
    
    public class daPy_sightPacket_c {
        
        [System.Text.Json.Serialization.JsonIgnoreAttribute()]
        private u32 pointer;
        
        //public bool mDrawFlag {get => this._mDrawFlag(); set => this._mDrawFlag(value);}//;
        
        //public bool mLockFlag {get => this._mLockFlag(); set => this._mLockFlag(value);}//;
        
        public u8[] field_0x6 {get => this._field_0x6(); set => this._field_0x6(value);}//;
        
        public cXyz mPos {get => this._mPos(); set => this._mPos(value);}//;
        
        //public Mtx field_0x14 {get => this._field_0x14(); set => this._field_0x14(value);}//;
        
        //public ResTIMG mpImg {get => this._mpImg(); set => this._mpImg(value);}//;
        
        public u32 mpLockTex {get => this._mpLockTex(); set => this._mpLockTex(value);}//;
        
        public u32 mSightTex {get => this._mSightTex(); set => this._mSightTex(value);}//;
        
        public daPy_sightPacket_c(u32 pointer) {
           this.pointer = pointer;
        }
        
        public static uint getSize() {
          return 0x0; // DEADBEEF TODO: Fix Addr
        }
        
       /* private bool _mDrawFlag() {
            return new bool(this.pointer + 0x04);
        }
        
        private void _mDrawFlag(bool value) {
        }
        
        private bool _mLockFlag() {
            return new bool(this.pointer + 0x05);
        }
        
        private void _mLockFlag(bool value) {
        }*/
        
        // #ARRCOUNT 2
        private u8[] _field_0x6() {
            u8[] bytes = new u8[2]; for(u32 i = 0; i < 2; i++){bytes[i] = Memory.RAM.ReadU8(this.pointer + 0x06 + (i * 1));} return bytes;
        }
        
        private void _field_0x6(u8[] value) {
            for(u32 i = 0; i < 2; i++){Memory.RAM.WriteU8(this.pointer + 0x06 + (i * 1), value[i]);}
        }
        
        private cXyz _mPos() {
            return new cXyz(this.pointer + 0x08);
        }
        
        private void _mPos(cXyz value) {
        }
        
        /*private Mtx _field_0x14() {
            return new Mtx(this.pointer + 0x14);
        }
        
        private void _field_0x14(Mtx value) {
        }
        
        private ResTIMG _mpImg() {
            return new ResTIMG(this.pointer + 0x44);
        }
        
        private void _mpImg(ResTIMG value) {
        }*/
        
        private u32 _mpLockTex() {
            return Memory.RAM.ReadU32(this.pointer + 0x48);
        }
        
        private void _mpLockTex(u32 value) {
            Memory.RAM.WriteU32(this.pointer + 0x48, value);
        }
        
        private u32 _mSightTex() {
            return Memory.RAM.ReadU32(this.pointer + 0x4C);
        }
        
        private void _mSightTex(u32 value) {
            Memory.RAM.WriteU32(this.pointer + 0x4C, value);
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TWW.API {
    
    
    public class daPy_npc_c {
        
        [System.Text.Json.Serialization.JsonIgnoreAttribute()]
        private u32 pointer;
        
        //public dBgS_ObjAcch mAcch {get => this._mAcch(); set => this._mAcch(value);}//;
        
        public u32 m4E4 {get => this._m4E4(); set => this._m4E4(value);}//;
        
        public u8 m4E8 {get => this._m4E8(); set => this._m4E8(value);}//;
        
        public u8 mDamageFogTimer {get => this._mDamageFogTimer(); set => this._mDamageFogTimer(value);}//;
        
        public u8[] field_4EA {get => this._field_4EA(); set => this._field_4EA(value);}//;
        
        public daPy_npc_c(u32 pointer) {
           this.pointer = pointer;
        }
        
        public static uint getSize() {
          return 0x0; // DEADBEEF TODO: Fix Addr
        }
        
/*        private dBgS_ObjAcch _mAcch() {
            return new dBgS_ObjAcch(this.pointer + 0x320);
        }
        
        private void _mAcch(dBgS_ObjAcch value) {
        }*/
        
        private u32 _m4E4() {
            return Memory.RAM.ReadU32(this.pointer + 0x4E4);
        }
        
        private void _m4E4(u32 value) {
            Memory.RAM.WriteU32(this.pointer + 0x4E4, value);
        }
        
        private u8 _m4E8() {
            return Memory.RAM.ReadU8(this.pointer + 0x4E8);
        }
        
        private void _m4E8(u8 value) {
            Memory.RAM.WriteU8(this.pointer + 0x4E8, value);
        }
        
        private u8 _mDamageFogTimer() {
            return Memory.RAM.ReadU8(this.pointer + 0x4E9);
        }
        
        private void _mDamageFogTimer(u8 value) {
            Memory.RAM.WriteU8(this.pointer + 0x4E9, value);
        }
        
        // #ARRCOUNT 2
        private u8[] _field_4EA() {
            u8[] bytes = new u8[2]; for(u32 i = 0; i < 2; i++){bytes[i] = Memory.RAM.ReadU8(this.pointer + 0x4EA + (i * 1));} return bytes;
        }
        
        private void _field_4EA(u8[] value) {
            for(u32 i = 0; i < 2; i++){Memory.RAM.WriteU8(this.pointer + 0x4EA + (i * 1), value[i]);}
        }
    }
}

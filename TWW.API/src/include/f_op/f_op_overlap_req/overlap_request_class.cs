//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TWW.API {
    
    
    public class overlap_request_class {
        
        [System.Text.Json.Serialization.JsonIgnoreAttribute()]
        private u32 pointer;
        
        public u8 field_0x1 {get => this._field_0x1(); set => this._field_0x1(value);}//;
        
        public s16 mDelay {get => this._mDelay(); set => this._mDelay(value);}//;
        
        public u16 field_0x4 {get => this._field_0x4(); set => this._field_0x4(value);}//;
        
        public u16 mPeektime {get => this._mPeektime(); set => this._mPeektime(value);}//;
        
        public u32 mIsPeek {get => this._mIsPeek(); set => this._mIsPeek(value);}//;
        
        public u32 field_0xc {get => this._field_0xc(); set => this._field_0xc(value);}//;
        
        public s16 mProcName {get => this._mProcName(); set => this._mProcName(value);}//;
        
        public u8 field_0x12 {get => this._field_0x12(); set => this._field_0x12(value);}//;
        
        public u8 field_0x13 {get => this._field_0x13(); set => this._field_0x13(value);}//;
        
        public u32 mPId {get => this._mPId(); set => this._mPId(value);}//;
        
        //public request_of_phase_process_class mPhs {get => this._mPhs(); set => this._mPhs(value);}//;
        
        public overlap_task_class mpTask {get => this._mpTask(); set => this._mpTask(value);}//;
        
        //public layer_class pCurrentLayer {get => this._pCurrentLayer(); set => this._pCurrentLayer(value);}//;
        
        public overlap_request_class(u32 pointer) {
           this.pointer = pointer;
        }
        
        public static uint getSize() {
          return 0x0; // DEADBEEF TODO: Fix Addr
        }
        
        private u8 _field_0x1() {
            return Memory.RAM.ReadU8(this.pointer + 0x01);
        }
        
        private void _field_0x1(u8 value) {
            Memory.RAM.WriteU8(this.pointer + 0x01, value);
        }
        
        private s16 _mDelay() {
            return Memory.RAM.ReadS16(this.pointer + 0x02);
        }
        
        private void _mDelay(s16 value) {
            Memory.RAM.WriteS16(this.pointer + 0x02, value);
        }
        
        private u16 _field_0x4() {
            return Memory.RAM.ReadU16(this.pointer + 0x04);
        }
        
        private void _field_0x4(u16 value) {
            Memory.RAM.WriteU16(this.pointer + 0x04, value);
        }
        
        private u16 _mPeektime() {
            return Memory.RAM.ReadU16(this.pointer + 0x06);
        }
        
        private void _mPeektime(u16 value) {
            Memory.RAM.WriteU16(this.pointer + 0x06, value);
        }
        
        private u32 _mIsPeek() {
            return Memory.RAM.ReadU32(this.pointer + 0x08);
        }
        
        private void _mIsPeek(u32 value) {
            Memory.RAM.WriteU32(this.pointer + 0x08, value);
        }
        
        private u32 _field_0xc() {
            return Memory.RAM.ReadU32(this.pointer + 0x0C);
        }
        
        private void _field_0xc(u32 value) {
            Memory.RAM.WriteU32(this.pointer + 0x0C, value);
        }
        
        private s16 _mProcName() {
            return Memory.RAM.ReadS16(this.pointer + 0x10);
        }
        
        private void _mProcName(s16 value) {
            Memory.RAM.WriteS16(this.pointer + 0x10, value);
        }
        
        private u8 _field_0x12() {
            return Memory.RAM.ReadU8(this.pointer + 0x12);
        }
        
        private void _field_0x12(u8 value) {
            Memory.RAM.WriteU8(this.pointer + 0x12, value);
        }
        
        private u8 _field_0x13() {
            return Memory.RAM.ReadU8(this.pointer + 0x13);
        }
        
        private void _field_0x13(u8 value) {
            Memory.RAM.WriteU8(this.pointer + 0x13, value);
        }
        
        private u32 _mPId() {
            return Memory.RAM.ReadU32(this.pointer + 0x14);
        }
        
        private void _mPId(u32 value) {
            Memory.RAM.WriteU32(this.pointer + 0x14, value);
        }
        
/*        private request_of_phase_process_class _mPhs() {
            return new request_of_phase_process_class(this.pointer + 0x18);
        }
        
        private void _mPhs(request_of_phase_process_class value) {
        }*/
        
        private overlap_task_class _mpTask() {
            return new overlap_task_class(this.pointer + 0x20);
        }
        
        private void _mpTask(overlap_task_class value) {
        }
/*        
        private layer_class _pCurrentLayer() {
            return new layer_class(this.pointer + 0x24);
        }
        
        private void _pCurrentLayer(layer_class value) {
        }*/
    }
}

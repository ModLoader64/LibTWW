//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TWW.API {
    
    
    public class fopAcM_search4ev_prm {
        
        [System.Text.Json.Serialization.JsonIgnoreAttribute()]
        private u32 pointer;
        
        public char[] mName {get => this._mName(); set => this._mName(value);}//;
        
        public s16 mEventID {get => this._mEventID(); set => this._mEventID(value);}//;
        
        public s16 mProcName {get => this._mProcName(); set => this._mProcName(value);}//;
        
        public s8 mSubType {get => this._mSubType(); set => this._mSubType(value);}//;
        
        public fopAcM_search4ev_prm(u32 pointer) {
           this.pointer = pointer;
        }
        
        public static uint getSize() {
          return 0x0; // DEADBEEF TODO: Fix Addr
        }
        
        // #ARRCOUNT 30
        private char[] _mName() {
            char[] bytes = new char[30]; for(u32 i = 0; i < 30; i++){bytes[i] = (char)Memory.RAM.ReadU8(this.pointer + 0x00 + (i * 1));} return bytes;
        }
        
        private void _mName(char[] value) {
            for(u32 i = 0; i < 30; i++){Memory.RAM.WriteU8(this.pointer + 0x00 + (i * 1), (u8)value[i]);}
        }
        
        private s16 _mEventID() {
            return Memory.RAM.ReadS16(this.pointer + 0x1E);
        }
        
        private void _mEventID(s16 value) {
            Memory.RAM.WriteS16(this.pointer + 0x1E, value);
        }
        
        private s16 _mProcName() {
            return Memory.RAM.ReadS16(this.pointer + 0x20);
        }
        
        private void _mProcName(s16 value) {
            Memory.RAM.WriteS16(this.pointer + 0x20, value);
        }
        
        private s8 _mSubType() {
            return Memory.RAM.ReadS8(this.pointer + 0x22);
        }
        
        private void _mSubType(s8 value) {
            Memory.RAM.WriteS8(this.pointer + 0x22, value);
        }
    }
}

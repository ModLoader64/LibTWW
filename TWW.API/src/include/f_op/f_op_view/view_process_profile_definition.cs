//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TWW.API {
    
    
    public class view_process_profile_definition {
        
        [System.Text.Json.Serialization.JsonIgnoreAttribute()]
        private u32 pointer;
        
        //public leaf_process_profile_definition mBase {get => this._mBase(); set => this._mBase(value);}//;
        
        //public leafdraw_method_class mSubMtd {get => this._mSubMtd(); set => this._mSubMtd(value);}//;
        
        public u8 unk28 {get => this._unk28(); set => this._unk28(value);}//;
        
        public u8[] unk29 {get => this._unk29(); set => this._unk29(value);}//;
        
        public u32 unk2C {get => this._unk2C(); set => this._unk2C(value);}//;
        
        public u32 unk30 {get => this._unk30(); set => this._unk30(value);}//;
        
        public u32 unk34 {get => this._unk34(); set => this._unk34(value);}//;
        
        public u32 unk38 {get => this._unk38(); set => this._unk38(value);}//;
        
        public view_process_profile_definition(u32 pointer) {
           this.pointer = pointer;
        }
        
        public static uint getSize() {
          return 0x0; // DEADBEEF TODO: Fix Addr
        }
        
        /*private leaf_process_profile_definition _mBase() {
            return new leaf_process_profile_definition(this.pointer + 0x00);
        }
        
        private void _mBase(leaf_process_profile_definition value) {
        }
        
        // Subclassmethods
        private leafdraw_method_class _mSubMtd() {
            return new leafdraw_method_class(this.pointer + 0x24);
        }
        
        private void _mSubMtd(leafdraw_method_class value) {
        }*/
        
        private u8 _unk28() {
            return Memory.RAM.ReadU8(this.pointer + 0x28);
        }
        
        private void _unk28(u8 value) {
            Memory.RAM.WriteU8(this.pointer + 0x28, value);
        }
        
        // #ARRCOUNT 3
        // pad
        private u8[] _unk29() {
            u8[] bytes = new u8[3]; for(u32 i = 0; i < 3; i++){bytes[i] = Memory.RAM.ReadU8(this.pointer + 0x29 + (i * 1));} return bytes;
        }
        
        private void _unk29(u8[] value) {
            for(u32 i = 0; i < 3; i++){Memory.RAM.WriteU8(this.pointer + 0x29 + (i * 1), value[i]);}
        }
        
        private u32 _unk2C() {
            return Memory.RAM.ReadU32(this.pointer + 0x2C);
        }
        
        private void _unk2C(u32 value) {
            Memory.RAM.WriteU32(this.pointer + 0x2C, value);
        }
        
        private u32 _unk30() {
            return Memory.RAM.ReadU32(this.pointer + 0x30);
        }
        
        private void _unk30(u32 value) {
            Memory.RAM.WriteU32(this.pointer + 0x30, value);
        }
        
        private u32 _unk34() {
            return Memory.RAM.ReadU32(this.pointer + 0x34);
        }
        
        private void _unk34(u32 value) {
            Memory.RAM.WriteU32(this.pointer + 0x34, value);
        }
        
        private u32 _unk38() {
            return Memory.RAM.ReadU32(this.pointer + 0x38);
        }
        
        private void _unk38(u32 value) {
            Memory.RAM.WriteU32(this.pointer + 0x38, value);
        }
    }
}
